<?php

namespace frontend\controllers;


use backend\components\Helper;
use common\models\ChooseItems;
use common\models\ChooseTests;
use common\models\DragLessons;
use common\models\DragTests;
use common\models\LessonsTest;
use Yii;
use yii\web\Controller;

/**
 * Site controller
 */
class TestController extends Controller
{

    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            return $this->goHome();
        }
        $this->layout = 'profile';
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionGlobal($id)
    {
        $first_lesson = LessonsTest::GetFirstTest($id);
//        $lessons = LessonsTest::GetTestsByLessonId($id);
//        Helper::out($first_lesson);
//        exit;
        if ($first_lesson['type'] == LessonsTest::TYPE_DRAG) {
            return $this->redirect(['drag', 'id' => $first_lesson['test_id'], 'g' => $id]);
        }
        if ($first_lesson['type'] == LessonsTest::TYPE_CHOOSE) {
            return $this->redirect(['choose', 'id' => $first_lesson['test_id'], 'g' => $id]);
        }
        if ($first_lesson['type'] == LessonsTest::TYPE_VIDEO) {
            return $this->redirect(['video', 'id' => $first_lesson['test_id'], 'g' => $id]);
        }
    }

    public function actionPrimary($id)
    {

    }

    public function actionDrag($id,$g)
    {
        $lessons = LessonsTest::GetTestsByLessonId($g);
        $current_lesson = LessonsTest::GetTestsByLessonIdByTestId($g,$id,LessonsTest::TYPE_DRAG);
//                Helper::out($current_lesson);
//        exit;
//        $this->layout = false;
        return $this->render('drag', [
            'data' => DragTests::GetById($id),
            'items' => DragLessons::GetDragLessonsById($id),
            'count' => count($lessons),
            'current_lesson' => Helper::GetIndex($lessons,$current_lesson),
        ]);
    }

    public function actionChoose($id,$g)
    {
        $lessons = LessonsTest::GetTestsByLessonId($g);
        $current_lesson = LessonsTest::GetTestsByLessonIdByTestId($g,$id,LessonsTest::TYPE_CHOOSE);
//        Helper::out( ChooseItems::GetItemsById($id));
//        Helper::out($current_lesson);
//        Helper::out(Helper::GetIndex($lessons,$current_lesson));
//        die;
        return $this->render('choose', [
            'data' => ChooseTests::GetById($id),
            'items' => ChooseItems::GetItemsById($id),
            'count' => count($lessons),
            'current_lesson' => Helper::GetIndex($lessons,$current_lesson),
        ]);
    }

    public function actionChoose2()
    {
        $this->layout = false;
        return $this->render('choose_2', [

        ]);
    }

    public function actionVideo()
    {
        $this->layout = false;
        return $this->render('video', [

        ]);
    }

}
